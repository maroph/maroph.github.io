#!/bin/bash
#
##############################################
# Copyright (c) 2020 by Manfred Rosenboom    #
#                                            #
# This work is licensed under a MIT License. #
# https://choosealicense.com/licenses/mit/   #
##############################################
#
SCRIPT_NAME=`basename $0`
SCRIPT_DIR=`dirname $0`
VERSION="${SCRIPT_NAME}  2  (04-MAY-2020)"
#
###############################################################################
#
export LANG="en_US.UTF-8"
#
nocheck=0
#
###############################################################################
#
print_usage() {
    cat - <<EOT

Usage: ${SCRIPT_NAME} [option(s)] [venv]
       Call mkdocs to build the maroph.github.io related files

Options:
  -h|--help     : show this help and exit
  -V|--version  : show version information and exit
  -n|--no-check : don't check for the virtual environment
  venv          : create the required virtual environment and exit

EOT
}
#
###############################################################################
#
cwd=`pwd`
if [ "${SCRIPT_DIR}" = "." ]
then
    SCRIPT_DIR=$cwd
else
    cd ${SCRIPT_DIR}
    SCRIPT_DIR=`pwd`
    cd $cwd
fi
cwd=
unset cwd
#
###############################################################################
#
while :
do
    option=$1
    case "$1" in
        -h | --help)    
            print_usage
            exit 0
            ;;
        -V | --version)
            echo ${VERSION}
            exit 0
            ;;
        -n | --no-check)
            nocheck=1
            ;;
        --)
            shift 1
            break
            ;;
        --*)
            echo "${SCRIPT_NAME}: '$1' : unknown option"
            exit 1
            ;;
        -*)
            echo "${SCRIPT_NAME}: '$1' : unknown option"
            exit 1
            ;;
        *)  break;;
    esac
#
    shift 1
done
#
###############################################################################
#
cd ${SCRIPT_DIR} || exit 1
#
###############################################################################
#
if [ "$1" = "venv" ]
then
    rm -fr ./venv
    echo "${SCRIPT_NAME}: python3 -m venv ./venv"
    python3 -m venv ./venv || exit 1
    echo "${SCRIPT_NAME}: . ./venv/bin/activate"
    . ./venv/bin/activate
#
    echo "python -m pip install --upgrade pip"
    python -m pip install --upgrade pip || exit 1
    echo "python -m pip install --upgrade setuptools"
    python -m pip install --upgrade setuptools || exit 1
    echo "python -m pip install --upgrade wheel"
    python -m pip install --upgrade wheel || exit 1
#
    echo "python -m pip install --requirement ./requirements.txt"
    python -m pip install --requirement ./requirements.txt || exit 1
#
    exit 0
fi
#
###############################################################################
#
if [ "${VIRTUAL_ENV}" = "" ]
then
    if [ ! -d ${SCRIPT_DIR}/venv ]
    then
        echo "${SCRIPT_NAME}: directory ${SCRIPT_DIR}/venv missing"
        echo "${SCRIPT_NAME}: call first './build venv'"
        exit 1
    fi
#
    if [ ! -r ${SCRIPT_DIR}/venv/bin/activate ]
    then
        echo "${SCRIPT_NAME}: script ${SCRIPT_DIR}/venv/bin/activate missing"
        exit 1
    fi
    . ${SCRIPT_DIR}/venv/bin/activate
else
    if [ "${VIRTUAL_ENV}" != "${SCRIPT_DIR}/venv" ]
    then
        if [ ${nocheck} -eq 0 ]
        then
            echo "${SCRIPT_NAME}: wrong virtual environment"
            echo "${SCRIPT_NAME}: \$VIRTUAL_ENV : ${VIRTUAL_ENV}"
            exit 1
        fi
    fi
fi
#
###############################################################################
#
cd ${SCRIPT_DIR} || exit 1
#
echo "${SCRIPT_NAME}: rm -fr docs"
rm -fr docs
mkdir docs || exit 1
#
echo "${SCRIPT_NAME}: mkdocs build"
mkdocs build || exit 1
#
echo ""
echo "${SCRIPT_NAME}: adapt permissions in directory docs"
find docs -type d -exec chmod 750 {} \;
find docs -type f -exec chmod 640 {} \;
#
echo ""
echo "${SCRIPT_NAME}: update site data"
rm -f ../LICENSE ../README.md
rm -f ../*.html
rm -f ../sitemap*
rm -fr ../css ../fonts ../img ../info ../js ../search
#
if [ ! -r ../.nojekyll ]
then
    touch  ../.nojekyll || exit 1
fi
#
cp -p LICENSE README.md .. || exit 1
#
cd docs || exit 1
cp -rp * ../.. || exit 1
#
cd ../.. || exit 1
#
echo ""
echo "${SCRIPT_NAME}: git add ."
git add . || exit 1
#
echo ""
echo "${SCRIPT_NAME}: git status"
git status
#
#echo ""
#echo "${SCRIPT_NAME}: git log -3"
#git log --graph --decorate --oneline -3
#
###############################################################################
#
exit 0

