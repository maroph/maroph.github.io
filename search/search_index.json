{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"My GitHub Site","title":"Home"},{"location":"index.html#my-github-site","text":"","title":"My GitHub Site"},{"location":"docs/mkdocs.html","text":"Python3 mkdocs Module With the help of the Python3 mkdocs module you can create simple web sites written in Markdown . Setup a mkdocs Python3 Virtual Environment I use the Python3 module venv to setup a virtual environment: $ python3 -m venv venv-mkdocs $ source venv-mkdocs/bin/activate (venv-mkdocs) $ python -m pip install --upgrade pip (venv-mkdocs) $ python -m pip install --upgrade setuptools (venv-mkdocs) $ python -m pip install --upgrade wheel (venv-mkdocs) $ python -m pip install --upgrade mkdocs (venv-mkdocs) $ python -m pip freeze >venv-mkdocs/requirements.txt","title":"mkdocs"},{"location":"docs/mkdocs.html#python3-mkdocs-module","text":"With the help of the Python3 mkdocs module you can create simple web sites written in Markdown .","title":"Python3 mkdocs Module"},{"location":"docs/mkdocs.html#setup-a-mkdocs-python3-virtual-environment","text":"I use the Python3 module venv to setup a virtual environment: $ python3 -m venv venv-mkdocs $ source venv-mkdocs/bin/activate (venv-mkdocs) $ python -m pip install --upgrade pip (venv-mkdocs) $ python -m pip install --upgrade setuptools (venv-mkdocs) $ python -m pip install --upgrade wheel (venv-mkdocs) $ python -m pip install --upgrade mkdocs (venv-mkdocs) $ python -m pip freeze >venv-mkdocs/requirements.txt","title":"Setup a mkdocs Python3 Virtual Environment"},{"location":"docs/openssl.html","text":"OpenSSL Last update: 31-MAY-2020 Introduction This document collects some samples about how to use the OpenSSL CLI tool openssl. Software versions in use: Debian/Raspbian: 10.4 OpenSSL: 1.1.1d (standard version on Debian/Raspbian 10) Compile Current OpenSSL Versions You will find the current version of OpenSSL 1.1.1 at https://www.openssl.org/source/ . You have to call the related config script before compiling the software. The command $ make install will compile and install the software. For historic reasons, the default installation directory is /usr/local/ssl You can change this default by using one of the following options in calling the config script: --prefix=DIR Install in DIR/bin, DIR/lib, DIR/include/openssl. Configuration files used by OpenSSL will be in DIR/ssl or the directory specified by --openssldir. --openssldir=DIR Directory for OpenSSL files. If no prefix is specified, the library files and binaries are also installed there. For more details read the INSTALL file of the distribution. OpenSSL 1.1.1g wget https://www.openssl.org/source/openssl-1.1.1g.tar.gz tar xvzf openssl-1.1.1g.tar.gz cd openssl-1.1.1g ./config make depend make LD_LIBRARY_PATH=. apps/openssl version OpenSSL 1.1.1g 21 Apr 2020 OpenSSL 3.0 (not yet released) OpenSSL 3.0 is still in development, but you can already download the OpenSSL 3.0 Alpha2 Release. If you want to try the most recent version of OpenSSL 3.0 you have to clone the related Git repository: git clone https://github.com/openssl/openssl.git cd openssl ./config make depend make LD_LIBRARY_PATH=. apps/openssl version OpenSSL 3.0.0-alpha3-dev (Library: OpenSSL 3.0.0-alpha3-dev ) You can update your local Git repository with the following commands: git fetch --all --tags git pull make clean ./config make depend make LD_LIBRARY_PATH=. apps/openssl version OpenSSL 3.0.0-alpha3-dev (Library: OpenSSL 3.0.0-alpha3-dev )","title":"OpenSSL"},{"location":"docs/openssl.html#openssl","text":"Last update: 31-MAY-2020","title":"OpenSSL"},{"location":"docs/openssl.html#introduction","text":"This document collects some samples about how to use the OpenSSL CLI tool openssl. Software versions in use: Debian/Raspbian: 10.4 OpenSSL: 1.1.1d (standard version on Debian/Raspbian 10)","title":"Introduction"},{"location":"docs/openssl.html#compile-current-openssl-versions","text":"You will find the current version of OpenSSL 1.1.1 at https://www.openssl.org/source/ . You have to call the related config script before compiling the software. The command $ make install will compile and install the software. For historic reasons, the default installation directory is /usr/local/ssl You can change this default by using one of the following options in calling the config script: --prefix=DIR Install in DIR/bin, DIR/lib, DIR/include/openssl. Configuration files used by OpenSSL will be in DIR/ssl or the directory specified by --openssldir. --openssldir=DIR Directory for OpenSSL files. If no prefix is specified, the library files and binaries are also installed there. For more details read the INSTALL file of the distribution.","title":"Compile Current OpenSSL Versions"},{"location":"docs/openssl.html#openssl-111g","text":"wget https://www.openssl.org/source/openssl-1.1.1g.tar.gz tar xvzf openssl-1.1.1g.tar.gz cd openssl-1.1.1g ./config make depend make LD_LIBRARY_PATH=. apps/openssl version OpenSSL 1.1.1g 21 Apr 2020","title":"OpenSSL 1.1.1g"},{"location":"docs/openssl.html#openssl-30-not-yet-released","text":"OpenSSL 3.0 is still in development, but you can already download the OpenSSL 3.0 Alpha2 Release. If you want to try the most recent version of OpenSSL 3.0 you have to clone the related Git repository: git clone https://github.com/openssl/openssl.git cd openssl ./config make depend make LD_LIBRARY_PATH=. apps/openssl version OpenSSL 3.0.0-alpha3-dev (Library: OpenSSL 3.0.0-alpha3-dev ) You can update your local Git repository with the following commands: git fetch --all --tags git pull make clean ./config make depend make LD_LIBRARY_PATH=. apps/openssl version OpenSSL 3.0.0-alpha3-dev (Library: OpenSSL 3.0.0-alpha3-dev )","title":"OpenSSL 3.0 (not yet released)"},{"location":"info/license.html","text":"License This work is licensed under a Creative Commons Attribution 4.0 International License","title":"License"},{"location":"info/license.html#license","text":"This work is licensed under a Creative Commons Attribution 4.0 International License","title":"License"},{"location":"info/sources.html","text":"Sources This site is build with mkdocs . The intro picture (assets/THHGTTG_intro.jpg) at the home page is a renamed copy of the image https://ichef.bbci.co.uk/images/ic/480xn/p01td1v2.jpg . This image is a screenshot of the original \"The Hitchhiker's Guide to the Galaxy\" Infocom game released in 1984. You can play a modernized version of this game at the following BBC site The Hitchhiker's Guide to the Galaxy - 30th Anniversary Edition","title":"Sources"},{"location":"info/sources.html#sources","text":"This site is build with mkdocs . The intro picture (assets/THHGTTG_intro.jpg) at the home page is a renamed copy of the image https://ichef.bbci.co.uk/images/ic/480xn/p01td1v2.jpg . This image is a screenshot of the original \"The Hitchhiker's Guide to the Galaxy\" Infocom game released in 1984. You can play a modernized version of this game at the following BBC site The Hitchhiker's Guide to the Galaxy - 30th Anniversary Edition","title":"Sources"}]}